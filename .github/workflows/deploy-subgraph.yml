name: Deploy Subgraph

on:
  workflow_dispatch:
    inputs:
      network:
        description: 'Network to deploy to'
        required: true
        type: choice
        options:
          - moksha
          - vana
      version:
        description: 'Version number (e.g., 7.0.15)'
        required: true
        type: string
      environment:
        description: 'Environment tag (optional)'
        required: false
        type: choice
        options:
          - ''
          - stag
          - prod

jobs:
  deploy:
    name: Deploy ${{ github.event.inputs.network }} v${{ github.event.inputs.version }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Prepare subgraph manifest
        run: yarn prepare:${{ github.event.inputs.network }}

      - name: Generate types
        run: yarn codegen

      - name: Build subgraph
        run: yarn build

      - name: Run tests
        run: yarn test:ci

      - name: Run linter
        run: yarn lint

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push Git tag
        id: create_tag
        run: |
          TAG="${{ github.event.inputs.network }}/${{ github.event.inputs.version }}"
          COMMIT_HASH="${{ github.sha }}"

          echo "tag_name=${TAG}" >> $GITHUB_OUTPUT

          # Check if tag already exists
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "❌ Tag $TAG already exists!"
            exit 1
          fi

          # Create annotated tag
          git tag -a "$TAG" -m "Deploy ${{ github.event.inputs.network }} subgraph v${{ github.event.inputs.version }}

          Commit: ${COMMIT_HASH}
          Network: ${{ github.event.inputs.network }}
          Date: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
          Triggered by: ${{ github.actor }}"

          # Push tag
          git push origin "$TAG"

          echo "✅ Created and pushed tag: $TAG"

      - name: Deploy to Goldsky
        env:
          GOLDSKY_TOKEN: ${{ secrets.GOLDSKY_TOKEN }}
        run: |
          echo "🚀 Deploying to Goldsky..."
          yarn deploy:${{ github.event.inputs.network }} ${{ github.event.inputs.version }}

      - name: Tag environment
        if: github.event.inputs.environment != ''
        run: |
          echo "🏷️  Tagging environment: ${{ github.event.inputs.environment }}"
          yarn tag:${{ github.event.inputs.network }} ${{ github.event.inputs.version }} ${{ github.event.inputs.environment }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_tag.outputs.tag_name }}
          release_name: ${{ github.event.inputs.network }} v${{ github.event.inputs.version }}
          body: |
            ## Deployment Details

            **Network:** `${{ github.event.inputs.network }}`
            **Version:** `${{ github.event.inputs.version }}`
            **Commit:** `${{ github.sha }}`
            **Environment:** `${{ github.event.inputs.environment || 'none' }}`
            **Deployed by:** @${{ github.actor }}

            ### Changes
            See commit history: [`${{ github.event.inputs.network }}/${{ github.event.inputs.version }}`](https://github.com/${{ github.repository }}/commits/${{ steps.create_tag.outputs.tag_name }})

            ### Links
            - [View in Goldsky Dashboard](https://app.goldsky.com)
            - [Compare with previous version](https://github.com/${{ github.repository }}/compare/${{ steps.create_tag.outputs.tag_name }})
          draft: false
          prerelease: false

      - name: Deployment summary
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "✅ Successfully deployed ${{ github.event.inputs.network }} v${{ github.event.inputs.version }}!"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "📋 Deployment summary:"
          echo "   Network:      ${{ github.event.inputs.network }}"
          echo "   Version:      ${{ github.event.inputs.version }}"
          echo "   Git tag:      ${{ steps.create_tag.outputs.tag_name }}"
          echo "   Commit:       ${{ github.sha }}"
          echo "   Environment:  ${{ github.event.inputs.environment || 'none' }}"
          echo ""
